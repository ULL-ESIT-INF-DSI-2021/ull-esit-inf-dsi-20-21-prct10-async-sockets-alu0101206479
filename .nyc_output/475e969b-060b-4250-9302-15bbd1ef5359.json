{"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/cliente/EventEmitterClient.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/cliente/EventEmitterClient.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":16}},"4":{"start":{"line":23,"column":27},"end":{"line":23,"column":29}},"5":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"6":{"start":{"line":25,"column":12},"end":{"line":25,"column":52}},"7":{"start":{"line":27,"column":8},"end":{"line":29,"column":11}},"8":{"start":{"line":28,"column":12},"end":{"line":28,"column":60}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":30,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":48},"end":{"line":26,"column":9}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"loc":{"start":{"line":27,"column":35},"end":{"line":29,"column":9}},"line":27}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":1,"8":1,"9":1},"f":{"0":1,"1":3,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/cliente/EventEmitterClient.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/cliente/EventEmitterClient.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAEpC;;;;;;GAMG;AACH,MAAa,kBAAmB,SAAQ,qBAAY;IAClD;;;;;;;OAOG;IACH,YAAY,UAAwB;QAClC,KAAK,EAAE,CAAC;QAER,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,EAAE;YACrC,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AArBD,gDAqBC","sourcesContent":["import {EventEmitter} from 'events';\n\n/**\n * ```typescript\n * // Ejemplo de creación\n *  const emitter = new EventEmitterClient(net.connect({port: 60300}));\n * ```\n * Clase que sirve para que el cliente se pueda conectar correctamente con el servidor\n */\nexport class EventEmitterClient extends EventEmitter {\n  /**\n   * ```typescript\n   * // Ejemplo de llamada\n   *  const emitter = new EventEmitterClient(net.connect({port: 60300}));\n   * ```\n   * Constructor de la clase EventEmitterClient\n   * @param connection Objeto EventEmitter (Socket)\n   */\n  constructor(connection: EventEmitter) {\n    super();\n\n    let mensajeTexto = '';\n    connection.on('data', (parteMensaje) => {\n      mensajeTexto += parteMensaje.toString();\n    });\n\n    connection.on('end', () => {\n      this.emit('response', JSON.parse(mensajeTexto));\n    });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4d67b222c6a134f8f17995e26971da24c507fd1e","contentHash":"7d5bfdcd3f74a7049ffbe130bbb7158532ceef221b00517e491df23f5be2f4b4"},"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/servidor/EventEmitterServer.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/servidor/EventEmitterServer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":16}},"4":{"start":{"line":23,"column":27},"end":{"line":23,"column":29}},"5":{"start":{"line":24,"column":8},"end":{"line":33,"column":11}},"6":{"start":{"line":25,"column":12},"end":{"line":25,"column":52}},"7":{"start":{"line":26,"column":31},"end":{"line":26,"column":57}},"8":{"start":{"line":27,"column":12},"end":{"line":32,"column":13}},"9":{"start":{"line":28,"column":32},"end":{"line":28,"column":71}},"10":{"start":{"line":29,"column":16},"end":{"line":29,"column":72}},"11":{"start":{"line":30,"column":16},"end":{"line":30,"column":58}},"12":{"start":{"line":31,"column":16},"end":{"line":31,"column":58}},"13":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":34,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":48},"end":{"line":33,"column":9}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":5,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":5},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/servidor/EventEmitterServer.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct10-async-sockets-alu0101206479/src/ejercicio-practica/servidor/EventEmitterServer.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AAGpC;;;;;;GAMG;AACH,MAAa,kBAAmB,SAAQ,qBAAY;IAGlD;;;;;;;OAOG;IACH,YAAY,UAAwB;QAClC,KAAK,EAAE,CAAC;QAER,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,EAAE;YACrC,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE,CAAC;YAExC,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAE9C,OAAO,YAAY,KAAK,CAAC,CAAC,EAAE;gBAC1B,MAAM,OAAO,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBACxD,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1C,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AA5BD,gDA4BC","sourcesContent":["import {EventEmitter} from 'events';\nimport * as net from 'net';\n\n/**\n * ```typescript\n * // Ejemplo de creación\n *  const emitter = new EventEmitterServer(connection);\n * ```\n * Clase que sirve para que el servidor se pueda conectar correctamente con el cliente y soluciona el problema del envío de mensajes por partes\n */\nexport class EventEmitterServer extends EventEmitter {\n  private server: net.Server;\n\n  /**\n   * ```typescript\n   * // Ejemplo de llamada\n   *  const emitter = new EventEmitterServer(connection);\n   * ```\n   * Constructor de la clase EventEmitterServer\n   * @param connection Objeto EventEmitter (Socket)\n   */\n  constructor(connection: EventEmitter) {\n    super();\n\n    let mensajeTexto = '';\n    connection.on('data', (parteMensaje) => {\n      mensajeTexto += parteMensaje.toString();\n\n      let messageLimit = mensajeTexto.indexOf('\\n');\n\n      while (messageLimit !== -1) {\n        const message = mensajeTexto.substring(0, messageLimit);\n        mensajeTexto = mensajeTexto.substring(messageLimit + 1);\n        this.emit('request', JSON.parse(message));\n        messageLimit = mensajeTexto.indexOf('\\n');\n      }\n    });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9d4600175346b181bc2af46cc4afd9dafede82d3","contentHash":"a70794a37c9c1730158e69da0b517d8b8162e511787d828bec6b22b6f9f3276a"}}